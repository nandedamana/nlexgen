// types.ngg
// This file is part of nlexgen, a lexer generator.
// Copyright (C) 2019, 2020, 2021 Nandakumar Edamana
// File started on 2021-01-32, migrating C code.

alias for int NlexCharacter; // Negative values are for special cases
// TODO rem once the above code produced typedef
vh typedef int NlexCharacter;

enum NlexErr
	NONE 0,
	MALLOC,
	REALLOC,
	READING
;

// Non-null-terminated string
struct NlexNString
	var buf string;
	var len size;
;

alias for uint NanTreeNodeId;
// TODO rem once the above code produced typedef
vh typedef unsigned int NanTreeNodeId;

shadow function NlexErrCallback     takes nh NlexHandle, errno NlexErr;
shadow function NlexConsumeCallback takes nh NlexHandle, offset size, len size;

class NlexHandle
	// Parameters that can only be set before calling nlex_init()
	// (if unset, will be initialized by nlex_init())
	var buf_alloc_unit size;
	
	// Parameters that can be set anytime
	var on_error     NlexErrCallback;
	var on_consume   NlexConsumeCallback;
	var userdata     pointer;

	// Set by nlex_init()
	var fp  stream;
	var buf mstring;
	
	// Everything below are set and modified by the lexer
	
	var bufptr       mstring; // Points to the character in consideration
	var bufendptr    mstring; // Where the next block of the input can be appended
	
	var curtokpos int;
	
	// Differs from lastmatchat (it tracks the pos of the last-matched character,
	// regardless of the rule reaching or not reaching its accepted state;
	// but curtoklen is set only upon reaching an accepted state).
	var curtoklen int;

	// Set to true if EOF has reached and the buffer was appended with 0
	var eof_read bool;
	
	var curstate             NanTreeNodeId;
	var last_accepted_state  NanTreeNodeId;
	
	// 'this stack' and 'next stack' (stacks holding the states for
	// this iteration and the next.
	// size_t chosen because currently states are identified using compile-time
	// addresses.
//	var tstack         array of NanTreeNodeId;
	var tstack array of uint; // TODO FIXME
	var tstack_top     size; // 0 => empty, 1 is the bottom
	var tstack_allocsiz size;
//	var nstack         array of NanTreeNodeId;
	var nstack array of uint; // TODO FIXME
	var nstack_top     size;
	var nstack_allocsiz size;
;
